name: Test & Audit Pull Request

on:
  issue_comment:
    types: [edited]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  build-publish-audit:
    name: Build, Publish, Audit
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest

    steps:
      - name: Add running comment to PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ‚ö°Ô∏è Running Svelte-Check, Jest tests, and Lighthouse audit...

      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci

      - run: npm run check
      - run: npm run test

      - name: Capture Vercel preview URL
        id: vercel_preview_url
        uses: aaron-binary/vercel-preview-url-action@v0.0.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Lighthouse Audit
        uses: treosh/lighthouse-ci-action@v7 # https://github.com/treosh/lighthouse-ci-action
        id: lighthouse_audit
        with:
          urls: |
            ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}
          # configPath: './.github/lighthouserc.json' # https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/getting-started.md https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/configuration.md#assert
          uploadArtifacts: true
          temporaryPublicStorage: true
          # serverBaseUrl: ${{ secrets.LHCI_SERVER_URL }}
          # serverToken: ${{ secrets.LHCI_SERVER_TOKEN }}

      - name: Format Lighthouse Score
        if: steps.lighthouse_audit.outputs.links
        id: format_lighthouse_score_for_slack
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = `‚ö°Ô∏è ${score(result.performance)} Performance: ${result.performance}, ${score(result.accessibility)} Accessibility: ${result.accessibility}, ${score(result['best-practices'])} Best practices: ${result['best-practices']}, ${score(result.seo)} SEO: ${result.seo}, ${score(result.pwa)} PWA | ${result.pwa} PWA: ${result.pwa}, ${Object.values(links)[0]}`
             core.setOutput("comment", comment);

      - name: Slack Lighthouse Notification
        uses: adamkdean/simple-slack-notify@master
        with:
          status: ${{ job.status }}
          success_text: 'Lighthouse successfully audited ${{ github.event.issue.title }} (#${env.GITHUB_RUN_NUMBER}) at ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}'
          failure_text: 'Lighthouse failed ${{ github.event.issue.title }} (#${env.GITHUB_RUN_NUMBER})'
          fields: |
            [{ "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"},
            { "title": "Lighthouse scores", "value": "${{ steps.format_lighthouse_score_for_slack.outputs.comment}}"}]

      - name: Format Lighthouse Score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')
             core.setOutput("comment", comment);

      - name: Update Lighthouse comment with results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}

  # e2e:
  #   runs-on: ubuntu-latest
  #   needs: build-publish-audit
  #   defaults:
  #     run:
  #       working-directory: e2e

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #     - uses: microsoft/playwright-github-action@v1

  #     - name: Install Dependencies
  #       run: npm ci

  #     - name: Run tests
  #       run: npm t

  #     - uses: actions/upload-artifact@v2
  #       if: ${{ always() }}
  #       with:
  #         name: screenshots
  #         path: e2e/screenshots

  #     - name: Slack E2E Results Notification
  #       if: always()
  #       uses: adamkdean/simple-slack-notify@master
  #       with:
  #         # channel: '#github'
  #         status: ${{ job.status }}
  #         success_text: 'E2E Tests for (#${env.GITHUB_RUN_NUMBER}) completed successfully on ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}'
  #         failure_text: 'E2E Tests for (#${env.GITHUB_RUN_NUMBER}) failed'
  #         cancelled_text: 'E2E Tests for (#${env.GITHUB_RUN_NUMBER}) cancelled'
  #         fields: |
  #           [{ "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
